2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten] MongoDB starting : pid=677 port=12345 dbpath=/Users/yu/www/personal/mongoDB/mongodb_simple/data 64-bit host=yudeMacBook-Pro.local
2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten] db version v3.4.1
2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten] git version: 5e103c4f5583e2566a45d740225dc250baacfbd7
2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2k  26 Jan 2017
2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten] allocator: system
2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten] modules: none
2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten] build environment:
2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten]     distarch: x86_64
2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten]     target_arch: x86_64
2017-02-09T16:28:51.942+0800 I CONTROL  [initandlisten] options: { config: "conf/mongod.conf", net: { port: 12345 }, processManagement: { fork: true }, storage: { dbPath: "data" }, systemLog: { destination: "file", path: "log/mongod.log", verbosity: 5 } }
2017-02-09T16:28:51.942+0800 D NETWORK  [initandlisten] fd limit hard:9223372036854775807 soft:4864 max conn: 3891
2017-02-09T16:28:51.943+0800 I -        [initandlisten] Detected data files in /Users/yu/www/personal/mongoDB/mongodb_simple/data created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.
2017-02-09T16:28:51.943+0800 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=7680M,session_max=20000,eviction=(threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(wait=60,log_size=2GB),statistics_log=(wait=0),
2017-02-09T16:28:52.374+0800 D COMMAND  [WTJournalFlusher] BackgroundJob starting: WTJournalFlusher
2017-02-09T16:28:52.374+0800 D STORAGE  [WTJournalFlusher] starting WTJournalFlusher thread
2017-02-09T16:28:52.375+0800 D STORAGE  [initandlisten] WiredTigerSizeStorer::loadFrom table:_mdb_catalog -> { numRecords: 3, dataSize: 1024 }
2017-02-09T16:28:52.375+0800 D STORAGE  [initandlisten] WiredTigerSizeStorer::loadFrom table:collection-0-3891187427619646654 -> { numRecords: 1, dataSize: 1797 }
2017-02-09T16:28:52.375+0800 D STORAGE  [initandlisten] WiredTigerSizeStorer::loadFrom table:collection-2-3891187427619646654 -> { numRecords: 1, dataSize: 59 }
2017-02-09T16:28:52.375+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:52.375+0800 D STORAGE  [initandlisten] WT begin_transaction for snapshot id 1
2017-02-09T16:28:52.376+0800 D STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:_mdb_catalog ok range 1 -> 1 current: 1
2017-02-09T16:28:52.383+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.383+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.383+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.384+0800 D STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:collection-2-3891187427619646654 ok range 1 -> 1 current: 1
2017-02-09T16:28:52.385+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.385+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.385+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.385+0800 D STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:collection-0-3891187427619646654 ok range 1 -> 1 current: 1
2017-02-09T16:28:52.386+0800 D STORAGE  [initandlisten] WT rollback_transaction for snapshot id 1
2017-02-09T16:28:52.386+0800 D STORAGE  [initandlisten] WT begin_transaction for snapshot id 2
2017-02-09T16:28:52.391+0800 D STORAGE  [initandlisten] WT rollback_transaction for snapshot id 2
2017-02-09T16:28:52.395+0800 I CONTROL  [initandlisten] 
2017-02-09T16:28:52.395+0800 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2017-02-09T16:28:52.395+0800 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2017-02-09T16:28:52.395+0800 I CONTROL  [initandlisten] 
2017-02-09T16:28:52.395+0800 D STORAGE  [initandlisten] enter repairDatabases (to check pdfile version #)
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] WT begin_transaction for snapshot id 4
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.396+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:index-1-3891187427619646654 ok range 6 -> 8 current: 6
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] local.startup_log: clearing plan cache - collection info cache reset
2017-02-09T16:28:52.397+0800 D -        [initandlisten] reloading view catalog for database local
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] Checking node for SERVER-23299 eligibility
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] Checking node for SERVER-23299 applicability - reading startup log
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] Checking node for SERVER-23299 applicability - checking version 3.2.x for x in [0, 4]
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten]     Recovering database: admin
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.397+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:index-3-3891187427619646654 ok range 6 -> 8 current: 6
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.398+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten] WiredTigerUtil::checkApplicationMetadataFormatVersion  uri: table:index-4-3891187427619646654 ok range 6 -> 8 current: 8
2017-02-09T16:28:52.399+0800 D STORAGE  [initandlisten] admin.system.version: clearing plan cache - collection info cache reset
2017-02-09T16:28:52.399+0800 D -        [initandlisten] reloading view catalog for database admin
2017-02-09T16:28:52.399+0800 D QUERY    [initandlisten] Using idhack: query: { _id: "featureCompatibilityVersion" } sort: {} projection: {}
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten] looking up metadata for: admin.system.version @ RecordId(3)
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-3-3891187427619646654", incompatible_with_version_32: "index-4-3891187427619646654" }, ns: "admin.system.version", ident: "collection-2-3891187427619646654" }
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "admin.system.version", options: {}, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 }, { spec: { v: 2, key: { version: 1 }, name: "incompatible_with_version_32", ns: "admin.system.version" }, ready: true, multikey: false, multikeyPaths: { version: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten]     Recovering database: local
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten] looking up metadata for: local.startup_log @ RecordId(1)
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten]  fetched CCE metadata: { md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }, idxIdent: { _id_: "index-1-3891187427619646654" }, ns: "local.startup_log", ident: "collection-0-3891187427619646654" }
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten] returning metadata: md: { ns: "local.startup_log", options: { capped: true, size: 10485760 }, indexes: [ { spec: { v: 1, key: { _id: 1 }, name: "_id_", ns: "local.startup_log" }, ready: true, multikey: false, multikeyPaths: { _id: BinData(0, 00) }, head: 0 } ] }
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten] done repairDatabases
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten] WT rollback_transaction for snapshot id 4
2017-02-09T16:28:52.400+0800 D QUERY    [initandlisten] Running query:
ns=admin.system.rolesTree: $and
Sort: {}
Proj: {}
2017-02-09T16:28:52.400+0800 D QUERY    [initandlisten] Running query: query: {} sort: {} projection: {}
2017-02-09T16:28:52.400+0800 D QUERY    [initandlisten] Collection admin.system.roles does not exist. Using EOF plan: query: {} sort: {} projection: {}
2017-02-09T16:28:52.400+0800 D QUERY    [initandlisten] Not caching executor but returning 0 results.
2017-02-09T16:28:52.400+0800 I COMMAND  [initandlisten] query admin.system.roles planSummary: EOF ntoreturn:0 ntoskip:0 keysExamined:0 docsExamined:0 cursorExhausted:1 numYields:0 nreturned:0 reslen:20 locks:{ Global: { acquireCount: { r: 10, W: 2 } }, Database: { acquireCount: { r: 4 } }, Collection: { acquireCount: { r: 4 } } } 0ms
2017-02-09T16:28:52.400+0800 D QUERY    [initandlisten] Using idhack: query: { _id: "authSchema" } sort: {} projection: {}
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten] WT begin_transaction for snapshot id 5
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten] WT rollback_transaction for snapshot id 5
2017-02-09T16:28:52.400+0800 D QUERY    [initandlisten] Using idhack: query: { _id: "shardIdentity" } sort: {} projection: {}
2017-02-09T16:28:52.400+0800 D STORAGE  [initandlisten] WT begin_transaction for snapshot id 6
2017-02-09T16:28:52.401+0800 D STORAGE  [initandlisten] WT commit_transaction for snapshot id 6
2017-02-09T16:28:52.401+0800 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/Users/yu/www/personal/mongoDB/mongodb_simple/data/diagnostic.data'
2017-02-09T16:28:52.401+0800 D INDEX    [initandlisten] IndexRebuilder::checkNS: admin.system.version
2017-02-09T16:28:52.401+0800 D INDEX    [initandlisten] IndexRebuilder::checkNS: local.startup_log
2017-02-09T16:28:52.401+0800 D INDEX    [initandlisten] checking complete
2017-02-09T16:28:52.401+0800 D COMMAND  [TTLMonitor] BackgroundJob starting: TTLMonitor
2017-02-09T16:28:52.401+0800 D COMMAND  [ClientCursorMonitor] BackgroundJob starting: ClientCursorMonitor
2017-02-09T16:28:52.401+0800 D COMMAND  [PeriodicTaskRunner] BackgroundJob starting: PeriodicTaskRunner
2017-02-09T16:28:52.401+0800 I NETWORK  [thread1] waiting for connections on port 12345
2017-02-09T16:28:52.485+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:52.590+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:52.696+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:52.801+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:52.905+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.005+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.111+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.214+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.314+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.419+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.524+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.628+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.734+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.835+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:53.935+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.039+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.143+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.249+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.352+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.452+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.557+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.663+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.763+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.865+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:54.970+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.075+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.177+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.277+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.378+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.480+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.581+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.683+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.785+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.890+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:55.993+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:56.094+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:56.199+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:56.304+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:56.409+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:56.511+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:56.616+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:56.717+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:56.819+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:56.923+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.027+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.127+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.229+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.334+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.440+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.543+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.649+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.754+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.860+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:57.960+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.065+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.169+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.272+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.377+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.477+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.582+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.683+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.786+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.891+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:58.994+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:59.098+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:59.198+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:59.303+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:59.406+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:59.506+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:59.611+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:59.714+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:59.815+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:28:59.915+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.020+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.120+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.225+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.330+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.431+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.536+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.640+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.741+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.845+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:00.946+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.048+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.148+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.248+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.350+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.453+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.556+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.659+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.764+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.865+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:01.970+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.075+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.180+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.281+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.382+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.487+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.590+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.691+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.794+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.898+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:02.998+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:03.102+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:03.206+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:03.306+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:03.407+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:03.511+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:03.614+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:03.715+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:03.815+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:03.919+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.019+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.119+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.224+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.328+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.429+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.530+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.635+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.736+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.841+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:04.945+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.050+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.152+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.258+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.363+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.464+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.569+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.670+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.774+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.880+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:05.981+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:06.086+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:06.191+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:06.296+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:06.401+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:06.502+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:06.608+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:06.711+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:06.816+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:06.919+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.025+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.128+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.233+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.336+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.441+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.544+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.649+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.754+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.859+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:07.964+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:08.065+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:08.169+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:08.270+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:08.373+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:08.478+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:08.583+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:08.686+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:08.791+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:08.896+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.001+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.106+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.211+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.316+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.421+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.523+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.623+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.728+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.834+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:09.939+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.040+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.144+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.245+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.350+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.454+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.556+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.656+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.757+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.862+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:10.966+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:11.070+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:11.172+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:11.273+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:11.373+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:11.478+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:11.583+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:11.686+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:11.791+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:11.896+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.001+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.106+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.212+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.317+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.418+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.522+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.623+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.728+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.831+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.936+0800 D STORAGE  [WTJournalFlusher] flushed journal
2017-02-09T16:29:12.965+0800 I CONTROL  [signalProcessingThread] got signal 2 (Interrupt: 2), will terminate after current cmd ends
2017-02-09T16:29:12.965+0800 I NETWORK  [signalProcessingThread] shutdown: going to close listening sockets...
2017-02-09T16:29:12.965+0800 I NETWORK  [signalProcessingThread] closing listening socket: 7
2017-02-09T16:29:12.965+0800 I NETWORK  [signalProcessingThread] closing listening socket: 8
2017-02-09T16:29:12.965+0800 I NETWORK  [signalProcessingThread] removing socket file: /tmp/mongodb-12345.sock
2017-02-09T16:29:12.965+0800 I NETWORK  [signalProcessingThread] shutdown: going to flush diaglog...
2017-02-09T16:29:12.965+0800 I FTDC     [signalProcessingThread] Shutting down full-time diagnostic data capture
2017-02-09T16:29:12.966+0800 D STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: admin.system.version
2017-02-09T16:29:12.966+0800 D STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: local.startup_log
2017-02-09T16:29:12.966+0800 D STORAGE  [signalProcessingThread] ~WiredTigerRecordStore for: _mdb_catalog
2017-02-09T16:29:12.966+0800 I STORAGE  [signalProcessingThread] WiredTigerKVEngine shutting down
2017-02-09T16:29:12.966+0800 D STORAGE  [signalProcessingThread] WiredTigerSizeStorer::storeInto table:_mdb_catalog -> { numRecords: 3, dataSize: 1024 }
2017-02-09T16:29:12.966+0800 D STORAGE  [signalProcessingThread] WiredTigerSizeStorer::storeInto table:collection-0-3891187427619646654 -> { numRecords: 2, dataSize: 3594 }
2017-02-09T16:29:12.966+0800 D STORAGE  [signalProcessingThread] WiredTigerSizeStorer::storeInto table:collection-2-3891187427619646654 -> { numRecords: 1, dataSize: 59 }
2017-02-09T16:29:13.040+0800 D STORAGE  [WTJournalFlusher] stopping WTJournalFlusher thread
2017-02-09T16:29:13.094+0800 I STORAGE  [signalProcessingThread] shutdown: removing fs lock...
2017-02-09T16:29:13.095+0800 I CONTROL  [signalProcessingThread] now exiting
2017-02-09T16:29:13.095+0800 I CONTROL  [signalProcessingThread] shutting down with code:0
2017-02-09T16:29:13.095+0800 I CONTROL  [initandlisten] shutting down with code:0
